# シェルスクリプト
- シェル変数と利用方法
- ユーザー入力受付

"""
#! /bin/bash
HTTP_PROXY='http://hoge:8080'
HTTPS_PROXY='http://hoge:8080'
read image_name
read version_name
read dockerfile_name
echo  We will build the image as $image_name:$version_name
docker build -t 192.168.10.3:5000/$image_name:$version_name -f ./$dockerfile_name . --build-arg http_proxy=$HTTP_PROXY --build-arg https_proxy=$HTTPS_PROXY
docker tag 192.168.10.3:5000/$image_name:$version_name localhost:5000/$image_name:$version_name
docker push localhost:5000/$image_name:$version_name
"""

# GPUの使っていないプロセスを消す
kill -9 $(lsof -t)
※使用中のプロセスは消去されないので注意

# rootに昇格してpasswdを変更出来るようにする
sudo su -
passwd

# mkdir
pオプション（paraentまで指定）
- mkdir -p ~/.ssh

# node.jsをパッケージマネージャーを使ってinstall
https://github.com/nodesource/distributions/blob/master/README.md
curl -sL https://deb.nodesource.com/setup_15.x | bash -
apt-get install -y nodejs

## debファイルからpackageをinstall
wget -c https://releases.hashicorp.com/vagrant/2.0.3/vagrant_2.0.3_x86_64.deb
sudo dpkg -i vagrant_2.0.3_x86_64.deb

## ファイルの個数を調べる
ls -1U | wc -l　：対象ディレクトリにおける数
ls -1UR | wc -l　：サブディレクトリも含めて

## portを使用しているプロセス調べてkill
!lsof -i:6006
!kill -KILL 29

## alias登録
vi ~/.bashrc
source ~/.bashrc

# tensorflowでGPUのバージョンを見るとき
from tensorflow.python.client import device_lib
device_lib.list_local_devices()

# curl
curl で URL 叩いて、ファイル名を指定してダウンロードしたいときは -o
curl はリダイレクト先の URL に対してのリクエストを 発行しない。なのでリダイレクトされている場合でもデータをが欲しい場合にはこのオプションを指定する必要がある。
他curl option: https://qiita.com/takayukioda/items/edf371b3566bea64d046
curl -I : レスポンスだけ取得

Getリクエスト：curl -XGET http://localhost:3000/api/v1/articles/4 | jq .
POSTリクエスト：curl -XPOST localhost:5000/books -d "name=A&count=1&status="OK"" -H 'Content-Type: application/json' 
※ -Hをつけないとjson要求である事が伝わらない．

jupyterでダウンロードする時
%%bash
fileid="1Jk4eGD7crsqCCg9C9VjCLkMN3ze8kutZ"
filename="General"
curl -c ./cookie -s -L "https://drive.google.com/uc?export=download&id=${fileid}" > /dev/null
curl -Lb ./cookie "https://drive.google.com/uc?export=download&confirm=`awk '/download/ {print $NF}' ./cookie`&id=${fileid}" -o ${filename}


# ログ出力をゴミ箱に
!pip install -U --pre tensorflow=="2.2.0" >& /dev/null

## usermodでuidとgidを変更
usermod user01 -o -u 10012 -g 10012
